# 贪心算法原理

- 贪心算法通过一系列选择求出问题的最优解。在每个决策点，它做出在当时看来最佳的选择。这种启发式策略并不能保证总能找到最优解，但对有些问题确实有效，如活动选择问题。
### 一般设计贪心算法
- 1、将最优化问题转化为这样的形式:对其做出一次选择后，只剩下一个自问题需要求解。
- 2、证明做出贪心选择后，原问题总是存在最优解，即贪心选择总是安全的。
- 3、证明做出贪心选择后，剩余的子问题满足性质: 其最优解与贪心选择组合即可得到原问题的最优解，这样就得到了最优子结构。
#### PS:在每个贪心算法之下，几乎总有一个更繁琐的动态规划算法。
判断贪心算法是否能求解最优化问题？
    没有合适所有情况的方法。
    `贪心选择性质`和`最优子结构`是两个关键因素。
贪心选择性质???
    我们可以通过做出局部最优选择来构造全局最优。 -- 我们直接做出在当前问题中看出来最优的解，而不必考虑子问题的解。
    贪心算法进行选择时，肯能会依赖之前做出的选择，但不依赖任何将来的选择或者子问题的解。
    如果我们进行贪心选择时，不得不考虑众多
最优子结构???
    如果一个问题的最优解包含其子问题的最优解，则称此问题具有最优子结构性质。 `此性质时能否应用动态规划和贪心方法的关键要素`
贪心算法和动态规划。
    0-1背包问题：动态规划
    分数背包问题:贪心算法